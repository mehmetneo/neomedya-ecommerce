import { NextRequest, NextResponse } from 'next/server'

export async function POST(request: NextRequest) {
  try {
    const body = await request.json()
    const { email } = body

    if (!email) {
      return NextResponse.json({ 
        error: 'E-posta adresi gerekli' 
      }, { status: 400 })
    }

    // Basit test e-postasÄ±
    const testEmailHtml = `
      <!DOCTYPE html>
      <html>
      <head>
        <title>Test E-postasÄ±</title>
      </head>
      <body>
        <h1>Test E-postasÄ±</h1>
        <p>Bu bir test e-postasÄ±dÄ±r. E-posta sistemi Ã§alÄ±ÅŸÄ±yor!</p>
        <p>GÃ¶nderim zamanÄ±: ${new Date().toLocaleString('tr-TR')}</p>
      </body>
      </html>
    `

    // E-posta gÃ¶nderme simÃ¼lasyonu
    console.log('ğŸ“§ Test e-postasÄ± gÃ¶nderiliyor...')
    console.log('AlÄ±cÄ±:', email)
    console.log('Konu: Test E-postasÄ± - Neomedya')
    console.log('Ä°Ã§erik uzunluÄŸu:', testEmailHtml.length, 'karakter')
    
    // SimÃ¼lasyon: E-posta baÅŸarÄ±yla gÃ¶nderildi
    const messageId = `test_${Date.now()}`
    
    console.log('âœ… Test e-postasÄ± baÅŸarÄ±yla gÃ¶nderildi:', messageId)

    return NextResponse.json({
      success: true,
      message: 'Test e-postasÄ± baÅŸarÄ±yla gÃ¶nderildi',
      messageId: messageId,
      details: {
        to: email,
        subject: 'Test E-postasÄ± - Neomedya',
        contentLength: testEmailHtml.length,
        timestamp: new Date().toISOString()
      }
    })

  } catch (error) {
    console.error('Test e-posta hatasÄ±:', error)
    return NextResponse.json({ 
      error: 'Test e-postasÄ± gÃ¶nderilirken bir hata oluÅŸtu' 
    }, { status: 500 })
  }
} 